Type-driven rules for financial intellegence . Financial intelligence architecture that employs financial types that are combined with rules to build financial behavior into the product. Types have behaviors such that types can be assigned that lead to the physical creation of underlying code which embodies the behaviors. Extensibility is provided at least by type parameterization and new type creation. Because types are a design time experience, types are two-way and can be modified, even after instantiation. This allows for mixing and matching of types and underlying behavior giving the system more flexibility at design time while providing a huge simplification of all the details that actually go into such financial applications. The type library is a set of rules that produce metadata, which metadata is later processed by a separate engine to produce the physical schema. The type library defines the basic interactions, data types, and behaviors for predefined dimensions in the system.
